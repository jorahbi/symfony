<?php

namespace AdminBundle\Repository;

/**
 * BorrowInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BorrowInfoRepository extends \Doctrine\ORM\EntityRepository
{

	protected $pageLimit = 10;
	protected $pageIndex = 1;
	protected $status = 0;
	protected $queryBuilder = null;
	protected $query = null;


	protected function mapRequest()
	{
		empty($this->queryBuilder) && $this->queryBuilder = $this->getEntityManager()->createQueryBuilder();
		empty($this->query) && $this->query = $this->queryBuilder->from($this->getEntityName(), 'b');
	}

	public function &getList($status = '5')
	{
		$this->mapRequest();
		$count = $this->query->select('count(b.id)')
		->where('b.borrowStatus = :borrowStatus')
		->setParameter('borrowStatus', $status)
		->getQuery()->getSingleScalarResult();

		$result['recordsTotal'] = $result['recordsFiltered'] = $count;
		$query = $this->query->select('b.id as id', 'm.id as mid')
		->leftJoin('AdminBundle:Members', 'm', 'WITH', 'm.id = b.borrowUid')
		//->leftJoin('AdminBundle:BorrowInvest', 'bi', 'WITH', 'bi.bid = b.id')
		->setMaxResults($this->pageLimit)
		->setFirstResult(($this->pageIndex - 1) * $this->pageLimit)
		->where('b.borrowStatus = :borrowStatus')
		->setParameter('borrowStatus', $status)
		//->orderBy('e.' . $this->order, $this->orderBy)
		->getQuery();
		$result['data'] = $query->getArrayResult();
		print_r($query->getSQL());
		print_r($result);die;
		//\Doctrine\Common\Util\Debug::dump($result['data']);die;
		//\Doctrine\Common\Util\Debug::dump($result['data'][0]->getBorrowInvest());die;
		//\Doctrine\Common\Util\Debug::dump($result);die;
		return $result;
	}
}
