<?php

namespace AdminBundle\Repository;

use AdminBundle\Entity\Permission;
use Symfony\Component\Cache\Adapter\ArrayAdapter;
use Symfony\Component\Cache\Adapter\FilesystemAdapter;
use Symfony\Component\Cache\DoctrineProvider;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\ORM\Mapping as ORM;
#use Doctrine\ORM\Tools\Pagination\Paginator; 
/**
 * PermissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PermissionRepository extends \Doctrine\ORM\EntityRepository
{

	protected $queryBuilder = null;
	protected $em = null;

	protected function mapRequest()
	{
		$this->em = $this->getEntityManager();
		$this->queryBuilder = $this->em->createQueryBuilder()->from($this->getEntityName(), 'p');
	}

	/**
	 * 添加权限
	 * @param Permission 
	 * @return permissionId
	 */
	public function add (Permission $permission)
	{	
		$this->mapRequest();
		!empty($permission->getPath()) &&		
		$permission->setParent($permission->getPath()) &&
		$permission->setPath(trim($permission->getPath()->getPath(), ','));
		$permission->setLv(count(explode(',', $permission->getPath())) + 1);
		
		//\Doctrine\Common\Util\Debug::dump($permission);die;
		$this->em->persist($permission);
		$this->em->flush();
		$this->em->clear();
		$permission->setPath(trim($permission->getPath() . ',' . $permission->getId(), ','));
		$this->em->flush();
		$this->em->clear();
		
		return $permission->getId();
	}

	/**
	 * 后台权限列表dataTable Ajax调用
	 * @param request
	 * @return []
	 */
	public function &getPermission(Request $request)
	{
		$result = [];
		$this->mapRequest();
		if($request->get('parentId') !== '0')
		{
			$this->queryBuilder->andWhere('p.parent = :parent')
				->setParameter('parent', $request->get('parentId'));
		}
		else
		{
			$this->queryBuilder
			->andWhere('p.lv = :lv')
			->setParameter('lv', 1);
		}
		$result['recordsTotal'] = $result['recordsFiltered'] = $this->queryBuilder->select('count(p.id)')->getQuery()->getSingleScalarResult();

		$this->queryBuilder->select('p');
		$this->queryBuilder->setFirstResult($request->get('start'))->setMaxResults($request->get('length'));

		$result['data'] = $this->queryBuilder->getQuery()->getArrayResult();
		return $result;
	}

	/**
	 * 后台面包屑
	 * 
	 */
	public function &getCrumbs()
	{
		$result = [];
		foreach($this->findAll() as &$item)
		{
			//菜单栏选中路径
			$result['menus'][$item->getLink()] = $item->getPath();
			//面包屑
			$result['crumbs'][$item->getId()] = [
				'link' => $item->getLink(),
				'label' => $item->getLabel(),
				'path' => $item->getPath(),
				'icon' => $item->getIcon()
			];
		}
        return $result;
	}
}
